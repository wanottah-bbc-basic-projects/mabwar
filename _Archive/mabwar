L.
   10IF PAGE<=&E00 THEN 100
   20COLOUR0
   30*KEY 0 *TAPE|MFOR I%=0 TO TOP-PAGE STEP 4:I%!&E00=I%!PAGE:NEXT|MPAGE=&E00|MOLD|MRUN|MF|M
   40*FX138,0,128
   50END
   60 
  100REM  *****************************
  110REM  MABWAR II 1-4 PLAYERS
  120REM  (c) Janet & John Ansell 1985
  130REM  *****************************
  140MODE 5:VDU23;8202;0;0;0;
  150REM  DEFINE CIRCLE CHARACTERS
  160VDU23,128,&0,&0,&0,&0,&0,&3,&7,&F
  170VDU23,129,&0,&0,&0,&0,&0,&C0,&E0,&F0
  180VDU23,130,&F,&1F,&1F,&1F,&3F,&3F,&3F,&3F
  190VDU23,131,&F0,&F8,&F8,&F8,&FC,&FC,&FC,&FC
  200VDU23,132,&3F,&3F,&3F,&3F,&1F,&1F,&1F,&F
  210VDU23,133,&FC,&FC,&FC,&FC,&F8,&F8,&F8,&F0
  220VDU23,134,&F,&7,&3,&0,&0,&0,&0,&0
  230VDU23,135,&F0,&E0,&C0,&0,&0,&0,&0,&0
  240VDU23,136,&0,&0,&0,&3,&7,&C,&18,&10
  250VDU23,137,&0,&0,&0,&C0,&E0,&30,&18,&8
  260VDU23,138,&30,&20,&20,&60,&40,&40,&40,&40
  270VDU23,139,&C,&4,&4,&6,&2,&2,&2,&2
  280VDU23,140,&40,&40,&40,&40,&60,&20,&20,&30
  290VDU23,141,&2,&2,&2,&2,&6,&4,&4,&C
  300VDU23,142,&10,&18,&C,&7,&3,&0,&0,&0
  310VDU23,143,&8,&18,&30,&E0,&C0,&0,&0,&0
  320COLOUR 130
  330PRINT TAB(3,9);"             "
  340PRINT TAB(3,10);" M A B W A R "
  350PRINT TAB(3,11);"             "
  360COLOUR 128
  370REM  DEFINE TEXT WINDOW
  380VDU 28,0,31,19,21
  390REM  REDEFINE COLOURS
  400VDU 19,3,5,0,0,0
  410REM  DIMENSION ARRAYS
  420DIM XC%(26):REM  X-COORD OF SYSTEM
  430DIM YC%(26):REM  Y-COORD OF SYSTEM
  440DIM CS$(26):REM  CONNECTED SYSTEMS
  450DIM OP%(26):REM  PLAYER IDENTITY
  460DIM PS%(26):REM  PLAYER STRENGTH(ARMIES)
  470NSYS%=0    :REM  NO.OF SYSTEMS
  480DIM SCORE%(5)
  490DIM NAME$(5)
  500DIM AST$(3)
  510ENVELOPE 1,1,0,0,0,1,1,1,127,-16,0,0,126,0
  520T%=RND(-TIME)
  530PROCINITDATA
  540PROCDRAWMAP
  550REM  GAME SETUP
  560PRINT TAB(0,23);"How many players"''"(1-4)?";
  570REPEAT
  580NP%=FNGETNO(4)
  590UNTIL NP%<>0
  600TURN%=0
  610PROCPLAYERSINIT
  620PROCMABINIT
  630REM  START OF TURN LOOP
  640REPEAT
  650TURN%=TURN%+1
  660P$=LEFT$("1234",NP%)
  670PROCPLAYERSTURN
  680PROCMABTURN
  690UNTIL FNWIN
  700PRINT TAB(0,3)"Another Game (Y/N)?";
  710IF INSTR("Yy",GET$)<>0 THEN RUN
  720MODE 7
  730END
  740 
  750DEF PROCPLAYERSINIT
  760REM  PLAYER INITIALISATION
  770FOR I%=1 TO NP%
  780REPEAT
  790PROCCLS(I%)
  800PRINT TAB(0,1);"Player ";I%;" what is"''"your name ";
  810INPUT NAME$(I%)
  820IF LEFT$(NAME$(I%),1)=" " THEN NAME$(I%)=RIGHT$(NAME$(I%),LEN(NAME$(I%))):GOTO 820
  830UNTIL NAME$(I%)<>""
  840NAME$(I%)=LEFT$(NAME$(I%),6)
  850REPEAT
  860PRINT TAB(0,5);"What start star do"''"you want ";NAME$(I%);"?  ";:VDU 8
  870H%=FNGETBASE(23):VDU H%+65
  880UNTIL OP%(H%)=-1
  890OP%(H%)=I%
  900PS%(H%)=5
  910SCORE%(I%)=1
  920PROCSYS(H%)
  930NEXT
  940ENDPROC
  950 
  960DEF PROCMABINIT
  970REM  MABS INITIALISATION
  980LOCAL I%,J%,S$
  990READ S$
 1000REPEAT
 1010J%=ASC(MID$(S$,RND(LEN(S$)),1))-65
 1020UNTIL PS%(J%)=0
 1030OP%(J%)=0
 1040PS%(J%)=9
 1050SCORE%(0)=SCORE%(0)+1
 1060PROCSYS(J%)
 1070PLAYER%=0
 1080PROCMABTURN
 1090ENDPROC
 1100 
 1110DEF PROCPLAYERSTURN
 1120REM  PLAYER TURN
 1130LOCAL I%,J%
 1140FOR I%=1 TO NP%
 1150PLAYER%=FNGETTURN
 1160PROCCLS(PLAYER%)
 1170PROCREINFORCE(PLAYER%)
 1180FOR J%=1 TO 2
 1190PROCCLS(PLAYER%)
 1200IF SCORE%(PLAYER%)=0 GOTO 1310
 1210PRINT TAB(0,1)"Your move ";NAME$(PLAYER%)
 1220*FX21,0
 1230REPEAT
 1240PRINT TAB(0,3)"From star (A-";CHR$(NSYS%+64);") ? ";:VDU 8:FR%=FNGETBASE(23):VDU FR%+65
 1250UNTIL OP%(FR%)=PLAYER%
 1260REPEAT
 1270PRINT TAB(0,5)"To star   (A-";CHR$(64+NSYS%);") ? ";:VDU 8:XTO%=FNGETBASE(23):VDU XTO%+65
 1280UNTIL INSTR(CS$(XTO%),CHR$(FR%+65))
 1290PRINT TAB(0,7)"Number of armies?";:ST%=FNGETNO(PS%(FR%)):VDU ST%+48
 1300PROCCOMBAT(FR%,XTO%,ST%)
 1310NEXT
 1320NEXT
 1330ENDPROC
 1340 
 1350DEF PROCMABTURN
 1360REM  MABS TURN
 1370PROCCLS(0)
 1380PLAYER%=0
 1390IF SCORE%(PLAYER%)=0 ENDPROC
 1400PRINT TAB(0,1);"MABS Turn"'
 1410PROCWAIT(100)
 1420PROCREINFORCE(PLAYER%)
 1430FOR I%=1 TO 2
 1440PROCMABATTACK
 1450NEXT
 1460ENDPROC
 1470 
 1480DEF FNGETNO(P%)
 1490REM  GETS A NUMBER IN THE RANGE 0 TO P%
 1500LOCAL K%
 1510REPEAT
 1520K%=GET-48
 1530UNTIL K%>=0 AND K%<=P%
 1540=K%
 1550 
 1560DEF FNGETBASE(P%)
 1570REM  GETS A LETTER IN THE RANGE A TO P%
 1580LOCAL K%
 1590REPEAT
 1600K%=GET-65
 1610UNTIL K%>=0 AND K%<=P%
 1620=K%
 1630 
 1640DEF PROCSYS(N%)
 1650REM  DISPLAY PLANETARY SYSTEM
 1660LOCAL X%,Y%
 1670X%=32*XC%(N%)
 1680Y%=1024-32*YC%(N%)
 1690VDU 5
 1700MOVE X%-32,Y%+32
 1710GCOL 0,FNBC(OP%(N%))
 1720VDU 128,129,10,8,8,130,131,10,8,8,132,133,10,8,8,134,135
 1730GCOL 0,FNFC(OP%(N%))
 1740MOVE X%,Y%
 1750VDU N%+65,10,8
 1760IF PS%(N%)<>0 THEN VDU PS%(N%)+48
 1770GCOL 0,3
 1780MOVE X%-32,Y%+32
 1790VDU 136,137,10,8,8,138,139,10,8,8,140,141,10,8,8,142,143
 1800VDU 4
 1810ENDPROC
 1820 
 1830DEF FNBC(P%)
 1840REM  FIND BACKGROUND COLOUR
 1850ON P%+2 GOTO 1860,1870,1880,1890,1900,1910 ELSE STOP
 1860=0
 1870=3
 1880=2
 1890=1
 1900=2
 1910=1
 1920 
 1930DEF FNFC(P%)
 1940REM  FIND FOREGROUND COLOUR
 1950ON P%+2 GOTO 1960,1970,1980,1990,2000,2010 ELSE STOP
 1960=3
 1970=0
 1980=0
 1990=0
 2000=1
 2010=2
 2020 
 2030DEF PROCDRAWMAP
 2040REM  DRAW MAP
 2050LOCAL I%,J%,K%
 2060FOR J%=0 TO NSYS%-1
 2070FOR I%=1 TO LEN(CS$(J%))
 2080K%=ASC(MID$(CS$(J%),I%,1))-65
 2090IF INSTR(CS$(K%),CHR$(J%+65))=0 THEN PRINT TAB(0,24)"DATA ERROR @ "CHR$(J%+65):STOP
 2100IF J%>K% THEN MOVE 32*XC%(K%)+32,992-32*YC%(K%):DRAW 32*XC%(J%)+32,992-32*YC%(J%)
 2110NEXT
 2120NEXT
 2130FOR I%=0 TO NSYS%-1
 2140PROCSYS(I%)
 2150NEXT
 2160PRINT
 2170ENDPROC
 2180 
 2190DEF FNGETTURN
 2200REM  RETURNS PLAYER NUMBER FOR TURN
 2210LOCAL K%,J%
 2220IF LEN(P$)=1 THEN J%=VAL(P$):GOTO 2260
 2230K%=RND(LEN(P$))
 2240J%=VAL(MID$(P$,K%,1))
 2250P$=LEFT$(P$,K%-1)+RIGHT$(P$,LEN(P$)-K%)
 2260=J%
 2270 
 2280DEF PROCREINFORCE(P%)
 2290REM  ADDS REINFORCEMENTS TO BASES OF PLAYERS/MABS AS SPECIFIED
 2300LOCAL R%,S%,Q%
 2310FOR R%=0 TO NSYS%-1
 2320IF OP%(R%)<>P% GOTO 2400
 2330Q%=0
 2340FOR S%=1 TO LEN(CS$(R%))
 2350IF OP%(ASC(MID$(CS$(R%),S%,1))-65)=P% THEN Q%=Q%+1
 2360NEXT
 2370IF Q%>1 THEN PS%(R%)=PS%(R%)+1
 2380IF PS%(R%)>9 THEN PS%(R%)=9
 2390PROCSYS(R%)
 2400NEXT
 2410ENDPROC
 2420 
 2430DEF PROCCOMBAT(F%,T%,S%)
 2440REM  DEALS WITH COMBAT BETWEEN PLAYERS/MABS
 2450REM  F% IS THE ATTACKING SYSTEM
 2460REM  T% IS THE DEFENDING SYSTEM
 2470REM  S% IS THE NO OF ARMIES
 2480IF S%=0 THEN ENDPROC
 2490IF PS%(T%)=0 OR OP%(T%)=OP%(F%) THEN PROCMOVE(F%,T%,S%):ENDPROC
 2500REPEAT
 2510IF S%>RND(S%+PS%(T%)) THEN PS%(T%)=PS%(T%)-1 ELSE PS%(F%)=PS%(F%)-1:S%=S%-1
 2520PROCSYS(T%)
 2530PROCSYS(F%)
 2540PROCWAIT(50)
 2550SOUND 0,1,100,2
 2560UNTIL S%=0 OR PS%(T%)=0
 2570IF PS%(T%)=0 THEN PROCMOVE(F%,T%,S%) ELSE PROCMOVE(F%,T%,0)
 2580ENDPROC
 
 2590 
 
 2600DEF PROCMOVE(F%,T%,S%)
 2610REM  MOVE S% STRENGTH POINTS FROM F% TO T%
 2620IF S%=0 THEN 2680
 2630PS%(F%)=PS%(F%)-S%
 2640PS%(T%)=PS%(T%)+S%
 2650IF PS%(T%)>9 THEN PS%(T%)=9
 2660IF OP%(T%)<>OP%(F%) THEN SCORE%(PLAYER%)=SCORE%(PLAYER%)+1:IF OP%(T%)<>-1 THEN SCORE%(OP%(T%))=SCORE%(OP%(T%))-1
 2670OP%(T%)=OP%(F%)
 2680IF PS%(F%)=0 THEN OP%(F%)=-1:SCORE%(PLAYER%)=SCORE%(PLAYER%)-1
 2690SOUND 0,1,100,3
 2700PROCSYS(F%)
 2710PROCSYS(T%)
 2720ENDPROC
 2730 
 2740DEF PROCWAIT(W%)
 2750REM  WAIT FOR W%*10 mS
 2760LOCAL T%
 2770T%=TIME:REPEAT UNTIL TIME>T%+W%
 2780ENDPROC
 
 2790 
 
 2800DEF FNWIN
 2810REM  CHECK FOR VICTORY
 2820LOCAL I%,J%,K%
 2830IF SCORE%(0)=NSYS% THEN PROCCLS(0):PRINT TAB(0,1);"MABS win":=TRUE
 2840IF SCORE%(0)<>0 THEN =FALSE
 2850K%=TRUE
 2860I%=24
 2870PROCCLS(-1)
 2880PRINT TAB(0,1);
 2890REPEAT
 2900FOR J%=1 TO NP%
 2910IF SCORE%(J%)=I% THEN PRINT NAME$(J%);:K%=FALSE
 2920NEXT
 2930I%=I%-1
 2940UNTIL K%=FALSE
 2950PRINT" wins"
 2960=TRUE
 
 2970 
 
 2980DEFPROCCLS(P%)
 2990REM  CLS AND SET COLOURS
 3000COLOUR FNFC(P%)
 3010COLOUR FNBC(P%)+128
 3020CLS
 3030ENDPROC
 
 3040 
 
 3050DEF PROCMABATTACK
 3060REM  MABS MOVE OR ATTACK
 3070LOCAL M%,N%,O%,TARGET%,DIF%,FRN%,DS%,EN%,I%,J%,S$,G%
 3080REM  INITIALISE ARRAY AST$
 3090FOR M%=0 TO 1
 3100AST$(M%)="!!!!!"
 3110NEXT
 3120REM  ANALYSE ALL SYSTEMS
 3130FOR M%=0 TO NSYS%-1
 3140IF OP%(M%)<>0 GOTO 3370
 3150REM  ANALYSE ALL TARGETS FROM SYSTEM
 3160FOR N%=1 TO LEN(CS$(M%))
 3170TARGET%=ASC(MID$(CS$(M%),N%,1))-65
 3180DIF%=PS%(M%)-PS%(TARGET%)+75
 3190DS%=75-PS%(TARGET%)
 3200FRN%=65
 3210IF OP%(TARGET%)=0 GOTO 3280
 3220REM  DETERMINE STRENGTH OF MAB SYSTEMS NEXT TO TARGET
 3230FOR O%=1 TO LEN(CS$(TARGET%))
 3240G%=ASC(MID$(CS$(TARGET%),O%,1))-65
 3250IF OP%(G%)=0 THEN FRN%=FRN%+PS%(G%)
 3260NEXT
 3270REM  DETERMINE STRENGTH OF UNFRIENDLY SYSTEMS NEXT TO M%
 3280EN%=75
 3290FOR O%=1 TO LEN(CS$(M%))
 3300G%=ASC(MID$(CS$(M%),O%,1))-65
 3310IF OP%(G%)>0 THEN EN%=EN%-PS%(G%)
 3320NEXT
 3330AST$(1)=CHR$(DIF%)+CHR$(DS%)+CHR$(FRN%)+CHR$(EN%)+"XX"+CHR$(M%+65)+CHR$(TARGET%+65)
 3340REM  SORT ARRAY AST$
 3350IF AST$(0)<AST$(1) THEN AST$(0)=AST$(1)
 3360NEXT
 3370NEXT
 3380IF AST$(0)<>"!!!!!" THEN M%=ASC(MID$(AST$(0),7,1))-65:TARGET%=ASC(MID$(AST$(0),8,1))-65:PROCMABCOMBAT(M%,TARGET%)
 3390ENDPROC
 
 3400 
 
 3410DEF PROCMABCOMBAT(F%,T%)
 3420REM  CALCULATE MAB ATTACK STRENGTH
 3430LOCAL AS%
 3440IF OP%(T%)<1 THEN AS%=(PS%(F%)-PS%(T%))/2 ELSE AS%=PS%(F%)-1
 3450PRINT "From ";CHR$(F%+65);" to ";CHR$(T%+65);",";CHR$(AS%+48);" Armies"
 3460PROCWAIT(300)
 3470PROCCOMBAT(F%,T%,AS%)
 3480ENDPROC
 
 3490 
 
 3500DEF PROCINITDATA
 3510REM  INITIALISE DATA
 3520LOCAL I%,J%
 3530PRINT
 3540PRINTTAB(0,23);"Select Sector(1-5)";
 3550REPEAT:I%=FNGETNO(5):UNTIL I%>0
 3560CLG
 3570ON I% GOTO 3580,3590,3600,3610,3620
 3580RESTORE 3740:GOTO 3630
 3590RESTORE 4010:GOTO 3630
 3600RESTORE 4280:GOTO 3630
 3610RESTORE 4550:GOTO 3630
 3620RESTORE 4780:GOTO 3630
 3630READ NSYS%
 3640CLS
 3650FOR I%=0 TO NSYS%-1
 3660READ XC%(I%),YC%(I%),CS$(I%)
 3670OP%(I%)=-1
 3680PS%(I%)=0
 3690NEXT
 3700FOR I%=0 TO 5
 3710SCORE%(I%)=0:NEXT
 3720ENDPROC
 
 3730REM  DATA FOR SECTOR 1
 3740DATA 24
 3750DATA 2,1,"BH"     :REM  A
 3760DATA 8,1,"AHI"    :REM  B
 3770DATA 15,1,"IJ"    :REM  C
 3780DATA 22,1,"EIJK"  :REM  D
 3790DATA 31,1,"DKF"   :REM  E
 3800DATA 36,1,"EL"    :REM  F
 3810DATA 1,6,"HM"     :REM  G
 3820DATA 7,6,"ABGMO"  :REM  H
 3830DATA 15,6,"BCDRO" :REM  I
 3840DATA 22,6,"DC"    :REM  J
 3850DATA 30,6,"DELPT" :REM  K
 3860DATA 37,6,"KFR"   :REM  L
 3870DATA 1,12,"GHT"   :REM  M
 3880DATA 8,12,"OS"    :REM  N
 3890DATA 14,10,"NHIUP":REM  O
 3900DATA 24,13,"OKQU" :REM  P
 3910DATA 30,13,"PRWV" :REM  Q
 3920DATA 37,13,"QILX" :REM  R
 3930DATA 1,17,"TN"    :REM  S
 3940DATA 7,18,"SMKU"  :REM  T
 3950DATA 17,17,"TOPV" :REM  U
 3960DATA 23,18,"UQW"  :REM  V
 3970DATA 30,18,"VQX"  :REM  W
 3980DATA 36,18,"WR"   :REM  X
 3990DATA "ABDEFLRTUVWGM"
 4000REM  DATA FOR SECTOR 2
 4010DATA 24
 4020DATA 1,1,"BG"     :REM  A
 4030DATA 6,1,"AHG"    :REM  B
 4040DATA 12,1,"ID"    :REM  C
 4050DATA 18,1,"CIE"   :REM  D
 4060DATA 24,2,"DJFP"  :REM  E
 4070DATA 32,2,"ELKN"  :REM  F
 4080DATA 1,6,"ABNW"   :REM  G
 4090DATA 15,6,"BIO"   :REM  H
 4100DATA 19,5,"CDHV"  :REM  I
 4110DATA 29,7,"EPQ"   :REM  J
 4120DATA 33,7,"FLQ"   :REM  K
 4130DATA 37,7,"KF"    :REM  L
 4140DATA 1,12,"NS"    :REM  M
 4150DATA 6,14,"MSGF"  :REM  N
 4160DATA 15,14,"HTUV" :REM  O
 4170DATA 24,12,"JE"   :REM  P
 4180DATA 29,13,"KRJ"  :REM  Q
 4190DATA 36,13,"QWX"  :REM  R
 4200DATA 1,18,"MNT"   :REM  S
 4210DATA 10,17,"SOU"  :REM  T
 4220DATA 18,18,"TO"   :REM  U
 4230DATA 23,18,"IWO"  :REM  V
 4240DATA 31,18,"VRXG" :REM  W
 4250DATA 37,18,"WR"   :REM  X
 4260DATA "ACPLXMU"
 4270REM  DATA FOR SECTOR 3
 4280DATA 24
 4290DATA 3,2,"BG"     :REM  A
 4300DATA 10,2,"AGHI"  :REM  B
 4310DATA 18,1,"ID"    :REM  C
 4320DATA 24,1,"CIJK"  :REM  D
 4330DATA 37,1,"KF"    :REM  E
 4340DATA 35,7,"LKER"  :REM  F
 4350DATA 1,8,"ABHS"   :REM  G
 4360DATA 9,6,"GBOL"   :REM  H
 4370DATA 15,4,"BCDJ"  :REM  I
 4380DATA 24,5,"IDQM"  :REM  J
 4390DATA 30,1,"DLFE"  :REM  K
 4400DATA 29,8,"KFOH"  :REM  L
 4410DATA 8,10,"SNJQ"  :REM  M
 4420DATA 9,15,"MSTU"  :REM  N
 4430DATA 16,14,"HUPL" :REM  O
 4440DATA 22,14,"OUVW" :REM  P
 4450DATA 27,12,"MJWR" :REM  Q
 4460DATA 37,12,"FQWX" :REM  R
 4470DATA 1,14,"GMNT"  :REM  S
 4480DATA 5,18,"SN"    :REM  T
 4490DATA 15,18,"NOPV" :REM  U
 4500DATA 21,18,"UP"   :REM  V
 4510DATA 28,18,"PQRX" :REM  W
 4520DATA 35,18,"WR"   :REM  X
 4530DATA "HJLQOM"
 4540REM  DATA FOR SECTOR 4
 4550DATA 20
 4560DATA 3,1,"BEJ"    :REM  A
 4570DATA 14,1,"AHC"   :REM  B
 4580DATA 25,1,"BFD"   :REM  C
 4590DATA 37,2,"CIO"   :REM  D
 4600DATA 9,5,"AFL"    :REM  E
 4610DATA 19,4,"ECG"   :REM  F
 4620DATA 32,6,"FMO"   :REM  G
 4630DATA 15,7,"KBI"   :REM  H
 4640DATA 22,7,"HDN"   :REM  I
 4650DATA 1,10,"AKQ"   :REM  J
 4660DATA 6,11,"JHP"   :REM  K
 4670DATA 14,11,"QEM"  :REM  L
 4680DATA 23,11,"LGS"  :REM  M
 4690DATA 32,10,"IPT"  :REM  N
 4700DATA 37,10,"DGT"  :REM  O
 4710DATA 19,15,"KNR"  :REM  P
 4720DATA 1,18,"JLR"   :REM  Q
 4730DATA 13,17,"QPS"  :REM  R
 4740DATA 24,18,"RMT"  :REM  S
 4750DATA 37,18,"SNO"  :REM  T
 4760DATA "ABCDEFGHIJKLMNOPQRST"
 4770REM  DATA FOR SECTOR 5
 4780DATA 19
 4790DATA 12,1,"DEB"   :REM  A
 4800DATA 20,1,"AEFC"  :REM  B
 4810DATA 28,1,"BFG"   :REM  C
 4820DATA 8,5,"HIEA"   :REM  D
 4830DATA 16,5,"ABDFIJ":REM  E
 4840DATA 24,5,"BCEGJK":REM  F
 4850DATA 32,5,"CFKL"  :REM  G
 4860DATA 4,9,"DIM"    :REM  H
 4870DATA 12,9,"DEHJMN":REM  I
 4880DATA 20,9,"EFIKNO":REM  J
 4890DATA 28,9,"FGJLOP":REM  K
 4900DATA 36,9,"GKP"   :REM  L
 4910DATA 8,13,"HINQ"  :REM  M
 4920DATA 16,13,"IJMOQR":REM  N
 4930DATA 24,13,"JKNPRS":REM  O
 4940DATA 32,13,"KLOS"  :REM  P
 4950DATA 12,17,"MNR"   :REM  Q
 4960DATA 20,17,"QNOS"  :REM  R
 4970DATA 28,17,"ROP"   :REM  S
 4980DATA "JJIJJEJJFJJKJJOJJNJJ"
>